
package br.com.ftm.exemplo.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AlunoWeb", targetNamespace = "http://ws.exemplo.ftm.com.br/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AlunoWeb {


    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "autenticado", targetNamespace = "http://ws.exemplo.ftm.com.br/", className = "br.com.ftm.exemplo.client.Autenticado")
    @ResponseWrapper(localName = "autenticadoResponse", targetNamespace = "http://ws.exemplo.ftm.com.br/", className = "br.com.ftm.exemplo.client.AutenticadoResponse")
    @Action(input = "http://ws.exemplo.ftm.com.br/AlunoWeb/autenticadoRequest", output = "http://ws.exemplo.ftm.com.br/AlunoWeb/autenticadoResponse")
    public boolean autenticado();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "novo", targetNamespace = "http://ws.exemplo.ftm.com.br/", className = "br.com.ftm.exemplo.client.Novo")
    @ResponseWrapper(localName = "novoResponse", targetNamespace = "http://ws.exemplo.ftm.com.br/", className = "br.com.ftm.exemplo.client.NovoResponse")
    @Action(input = "http://ws.exemplo.ftm.com.br/AlunoWeb/novoRequest", output = "http://ws.exemplo.ftm.com.br/AlunoWeb/novoResponse")
    public String novo(
        @WebParam(name = "arg0", targetNamespace = "")
        Aluno arg0);

    /**
     * 
     * @return
     *     returns java.util.List<br.com.ftm.exemplo.client.Aluno>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listar", targetNamespace = "http://ws.exemplo.ftm.com.br/", className = "br.com.ftm.exemplo.client.Listar")
    @ResponseWrapper(localName = "listarResponse", targetNamespace = "http://ws.exemplo.ftm.com.br/", className = "br.com.ftm.exemplo.client.ListarResponse")
    @Action(input = "http://ws.exemplo.ftm.com.br/AlunoWeb/listarRequest", output = "http://ws.exemplo.ftm.com.br/AlunoWeb/listarResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://ws.exemplo.ftm.com.br/AlunoWeb/listar/Fault/Exception")
    })
    public List<Aluno> listar()
        throws Exception_Exception
    ;

}
